managed implementation in class zbp_05_travel unique;
strict ( 2 );

/* Transactional Behavior for Root Entity Travel */
define behavior for ZI_05_Travel alias Travel
persistent table /dmo/travel
lock master
authorization master ( instance )
//etag master <field_name>
{
  create ( authorization : global );
  update;
  delete;
  association _Bookings { create; }

  validation validateCustomerId on save { create; }

  determination determineStatus on save { create; }

  action cancelTravel result [1] $self;

  field ( readonly ) Createdat, Createdby, Lastchangedat, Lastchangedby;
  field ( mandatory : create ) TravelId, AgencyId, CustomerId, BeginDate, EndDate;
  field ( readonly : update ) TravelId, AgencyId, CustomerId, BeginDate, EndDate;
  field ( mandatory ) Description;

  mapping for /dmo/travel corresponding
    {
      AgencyId     = agency_id;
      BeginDate    = begin_date;
      BookingFee   = booking_fee;
      CurrencyCode = currency_code;
      CustomerId   = customer_id;
      EndDate      = end_date;
      TotalPrice   = total_price;
      TravelId     = travel_id;
    }
}

/* Transactional Behavior for Child Entity Booking */
define behavior for ZI_05_Booking alias Booking
persistent table /dmo/booking
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;
  association _Travel;

  field ( readonly ) TravelId, BookingId;

  mapping for /dmo/booking corresponding
    {
      BookingDate  = booking_date;
      BookingId    = booking_id;
      CarrierId    = carrier_id;
      ConnectionId = connection_id;
      CurrencyCode = currency_code;
      CustomerId   = customer_id;
      FlightDate   = flight_date;
      FlightPrice  = flight_price;
      TravelId     = travel_id;
    }

}